<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../Lifecycle_and_Automation_Guide.ent">
%BOOK_ENTITIES;
]>
<section id="Creating_a_Method_to_Associate_with_the_Dialog1" remap="TID_15585">
	<title>Creating a Method to Associate with the Dialog</title>
	<para>
		You will need to create a method that connects the values in the dialog with the provisioning request. The method should be created in the DOMAIN/Service/Provisioning/StateMachines/ServiceProvision_Template class of the <guilabel>Automate</guilabel> model.
	</para>
	<note>
		<para>
			DOMAIN must be a user-defined Domain and not the locked ManageIQ Domain. If necessary, you can copy the class from the ManageIQ domain into a custom domain.
		</para>
	</note>
	<para>
		A method is provided below that was created for the following scenario:
	</para>
	<itemizedlist>
		<listitem>
			<para>
				You want to provision a 3-tiered Service that contains catalog items of web, app and DB. Each of these virtual machines (or cloud instances) has been tagged under the <guilabel>Service</guilabel> category with the appropriate value. Then, added as a catalog item and combined into a catalog bundle.
			</para>
		</listitem>
		<listitem>
			<para>
				The <guilabel>Service Dialog</guilabel> captures the selection of small, medium or large application in a dropdown called <filename>service_type</filename>. When referring to a value captured in an element in a dialog, the name of the element should be prefixed with <filename>dialog_</filename>. For example, <filename>service_type</filename> becomes <filename>dialog_service_type</filename> when used in the method.
			</para>
		</listitem>
		<listitem>
			<para>
				The method will set the memory sizes for each of the catalog items based on the <filename>service_type</filename> selection.
			</para>
		</listitem>
	</itemizedlist>
	<programlisting language="Ruby">
<![CDATA[#
#            CloudForms Management Engine Automate Method
#
$evm.log("info", "CloudForms Management Engine Automate Method ConfigureChildDialog Started")
#
#            Method Code Goes here
#
$evm.log("info", "===========================================")  
$evm.log("info", "Listing ROOT Attributes:")
$evm.root.attributes.sort.each { |k, v| $evm.log("info", "\t#{k}: #{v}")}
$evm.log("info", "===========================================")

stp_task = $evm.root["service_template_provision_task"]
$evm.log("info", "===========================================")  
$evm.log("info", "Listing task Attributes:")
stp_task.attributes.sort.each { |k, v| $evm.log("info", "\t#{k}: #{v}")}
$evm.log("info", "===========================================")

#############################################################
#### This is how the method would look for dialog variables
#############################################################
dialog_service_type = $evm.root['dialog_service_type']
$evm.log("info","User selected Dialog option = [#{dialog_service_type}]")

stp_miq_request_task = stp_task.miq_request_task
#$evm.log("info","(parent) miq_request_task:  = [#{stp_miq_request_task}]")

#############################################################
#### This is how you get the catalog items for the catalog bundle
#############################################################

stp_miq_request_tasks = stp_task.miq_request_tasks
#$evm.log("info","(children) miq_request_tasks count:  = [#{stp_miq_request_tasks.count}]")

#############################################################
#### By going through the children, you can set the dialog variable for each of the children (we based our values on the childrens service tags)
#############################################################

stp_miq_request_tasks.each do |t|

  $evm.log("info"," Setting dialog for: #{t.description}")
  service = t.source
  service_resource = t.service_resource
  #$evm.log("info"," Child service resource name: #{service_resource.resource_name}")
  #$evm.log("info"," Child service resource description: #{service_resource.resource_description}")

  service_tag_array = service.tags(:app_tier)  
  service_tag = service_tag_array.first.to_s

  memory_size = nil
    
#############################################################
#### The dialog_service_type is the attribute set on the service dialog 
#### We use the service_tag to decide what child gets what dialog 
#############################################################

  case dialog_service_type
  when "Small"
    case service_tag
    when "app"
      memory_size = 1024
    when "web"
      memory_size = 1024
    when "db"
      memory_size = 4096
    else
      $evm.log("info","Unknown Dialog type")
    end
  when "Large"
    case service_tag
    when "app"
      memory_size = 4096
    when "web"
      memory_size = 4096
    when "db"
      memory_size = 8192
    else
      $evm.log("info","Unknown Dialog type")
    end
  else
    $evm.log("info","Unknown Dialog type - setting Dialog options here")
  end

#############################################################
#### set_dialog_option sets the dialog for the child 
#############################################################

  t.set_dialog_option('memory',memory_size) unless memory_size.nil?
  $evm.log("info","Set dialog for selection: [#{dialog_service_type}]  Service_Tier: [#{service_tag}] Memory size: [#{memory_size}]")

end
#
#
#
$evm.log("info", "CloudForms Management Engine Automate Method ConfigureChildDialog Ended")
exit MIQ_OK
]]>
</programlisting>
</section>