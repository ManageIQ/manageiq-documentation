<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../Red_Hat_CloudForms_SOAP_API.ent">
%BOOK_ENTITIES;
]>
<section id="Windows_Powershell_List_All_Management_System_Hosts_and_VMs" remap="TID_14688">
	<title>Windows PowerShell: List All Provider, Hosts and VMs</title>
	<para>
		This script lists each Provider, Host and virtual machine. It also shows how to access the ws_attributes property which contains an array of name/value/data_type structures containing the virtual column data. For ease of use, a method has been included that converts the ws_attributes array into a hash of key/value pairs which allowing for easier data lookup.
	</para>
	<programlisting>$ip, $userid, $password = "https://evm_appl_address", "admin", "smartvm"

# Convert ws_attributes into a hash values
function ws_attributes_to_hash($obj) {
	$result = @{}
	$obj.ws_attributes | foreach {$result[$_.name] = $_.value}
	return $result
}

[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }
$cred = New-Object System.Management.Automation.PsCredential $userid, (convertto-securestring $password -asplaintext -force)
$miqvmdb = New-WebServiceProxy -uri "$($ip)/vmdbws/wsdl" -Credential $cred -ErrorAction Stop -Namespace VmdbWs
Write-Host "Successfully connected to EVM integrate web-services version: $([string]::join(".", $miqvmdb.Version()))"

Clear-Host

# Get all Providers
$ems_list = $miqvmdb.GetEmsList()
foreach ($e in $miqvmdb.GetEmsByList($ems_list)) {
	Write-Host "Provider: $($e.emstype_description) - $($e.hostname)"
	$attributes = ws_attributes_to_hash($e)
	$attributes | ft name, value

	foreach ($h in $miqvmdb.GetHostsByList($e.hosts)) {
		Write-Host "  Host: $($h.vmm_vendor):$($h.vmm_product) - $($h.hostname)"
		$attributes = ws_attributes_to_hash($h)
		$attributes | ft name, value
		
		# Print the list of all the VMs attached to this host
		foreach ($v in $h.vms) {Write-Host "    VM: $($v.name)"}

		# Print all the attributes for the first VM on this host
		if ($h.vms.Length -gt 0) {
			$vm = $miqvmdb.FindVmByGuid($h.vms[0].guid)
			Write-Host "`n`n    Printing attributes for VM: $($vm.name)"
			$attributes = ws_attributes_to_hash($vm)
			$attributes | ft name, value</programlisting>
</section>