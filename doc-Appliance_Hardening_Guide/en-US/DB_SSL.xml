<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Security_Guide.ent">
%BOOK_ENTITIES;
]>
<section id="chap-Red_Hat_CloudForms-Security_Guide-Setting_SSL_for_the_Appliance_Database" lang="en-US">
  <title>Configuring the Database to use SSL</title>
    <para>
      CloudForms initially connects to the database through an unencrypted communication. This is not an issue if you aim to use an internal-only database CloudForms appliance. If using multiple appliances connecting to a single appliance database, you can set up the database connection to use SSL. An SSL connection encrypts the communication between the CloudForms and the database.
    </para>
    <para>
      This procedure uses the following SSL certificate files on your main CloudForms database appliance:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <filename>/var/www/miq/vmdb/certs/server.cer</filename> - Signed or self-signed certificate for CloudForms database server appliance.
        </para>
        <note>
          <para>The appliance image ships with a default database server certificate and it is recommended to change this certificate. You can use a certificate signed by a trusted CA or, alternatively, generate a self-signed certificate.</para>
          <para>See <xref linkend="chap-Red_Hat_CloudForms-Security_Guide-SSL_Certs" /> for more information on generating SSL certificates.</para>
        </note>
      </listitem>
      <listitem>
        <para>
          <filename>/var/www/miq/vmdb/certs/server.cer.key</filename> - Private key for server certificate.
        </para>
      </listitem>
      <listitem>
        <para><filename>/var/www/miq/vmdb/certs/root.crt</filename> - The root certificate for CloudForms database server appliance. You can either use a self-signed certificate or a certificate signed by a trusted CA to generate your root certificate.</para>
      </listitem>
    </itemizedlist>
    <para>
      It is also recommended to stop all Red Hat CloudForms services before configuring the database to use SSL.
    </para>
    <procedure id="proc-Red_Hat_Satellite-Installation_Guide-Configuring_the_Database_to_use_SSL-Configuring_SSL_on_the_database_server">
      <title>Configuring SSL on the database server</title>
      <step>
        <para>
          Log in to the main appliance as <literal>root</literal>.
        </para>
      </step>
      <step>
        <para>Stop the <systemitem>evmserverd</systemitem> and <systemitem>rh-postgresql94-postgresql</systemitem> services:</para>
        <screen>[root@cloudforms2 ~]# service evmserverd stop</screen>
        <screen>[root@cloudforms2 ~]# service rh-postgresql94-postgresql stop</screen>
      </step>
      <step>
        <para>Install the server key file in the correct location and set the ownership and permissions for it:</para>
        <screen>
[root@cloudforms2 ~]# install -m 600 -o postgres -g postgres \
/var/www/miq/vmdb/certs/server.cer.key /var/www/miq/vmdb/certs/postgres.key
        </screen>
      </step>
      <step>
        <para>Install the server certificate file in the correct location and set the ownership and permissions for it:</para>
        <screen>
[root@cloudforms2 ~]# install -m 644 -o postgres -g postgres \
/var/www/miq/vmdb/certs/server.cer /var/www/miq/vmdb/certs/postgres.crt
        </screen>
      </step>
      <step>
        <para>Use the database server certificate to create your root certificate:</para>
        <screen>[root@cloudforms2 ~]# openssl req -new -key /var/www/miq/vmdb/certs/server.cer.key -days 3650 -out /tmp/root.crt -x509 -subj '/C=US/ST=North Carolina/L=Raleigh/O=CloudForms/CN=root'</screen>
      </step>
      <step>
        <para>Install the root certificate file in the correct location and set the ownership and permissions for it:</para>
        <screen>[root@cloudforms2 ~]# install -m 644 -o postgres -g postgres /tmp/root.crt /var/www/miq/vmdb/certs/root.crt</screen>
      </step>
      <step>
        <para>Make sure that the security context is set correctly for the files in <filename>/var/www/miq/certs</filename>:</para>
        <screen>
[root@cloudforms2 ~]# restorecon -R -v /var/www/miq/vmdb/certs
        </screen>
      </step>
      <step>
        <para>
          Open the <filename>/var/opt/rh/rh-postgresql94/lib/pgsql/data/postgresql.conf</filename> file and uncomment and edit the <option>ssl</option> option:
        </para>
        <screen>
ssl=on
        </screen>
        <para>
          In the same file, locate the options <option>ssl_cert_file</option>, <option>ssl_key_file</option>, and <option>ssl_ca_file</option> that specify the location of SSL certificates and edit them so that they are uncommented and point to the correct certificate files:
        </para>
        <programlisting>
ssl_cert_file = '/var/www/miq/vmdb/certs/postgres.crt'  # (change requires restart)
ssl_key_file  = '/var/www/miq/vmdb/certs/postgres.key'  # (change requires restart)
ssl_ca_file   = '/var/www/miq/vmdb/certs/root.crt'      # (change requires restart)
        </programlisting>
      </step>
      <step>
        <para>
          Edit the <filename>/var/opt/rh/rh-postgresql94/lib/pgsql/data/pg_hba.conf</filename> file. It should look similar to this:
        </para>
        <programlisting>
# TYPE    DATABASE USER  ADDRESS       METHOD
local     all      all                 peer map=usermap
host      all      all   all           md5
#hostssl  all      all   all           md5
        </programlisting>
        <para>
          Modify the file content to comment the <literal>host</literal> entry and uncomment the <literal>hostssl</literal> entry:
        </para>
        <programlisting>
# TYPE    DATABASE USER  ADDRESS       METHOD
local     all      all                 peer map=usermap
#host     all      all   all           md5
hostssl   all      all   all           md5
        </programlisting>
        <para>
This changes the incoming communication protocol to use SSL and refuse any unencrypted PostgreSQL connections.
        </para>
      </step>
      <step>
        <para>
          Start the <systemitem>rh-postgresql94-postgresql</systemitem> and <systemitem>evmserverd</systemitem> services so that the changes take effect:
        </para>
        <screen>[root@cloudforms1 ~]# service rh-postgresql94-postgresql start</screen>
        <screen>[root@cloudforms1 ~]# service evmserverd start</screen>
      </step>
    </procedure>
    <para>
      The database server now only accepts connections from clients using SSL. The next procedure sets up client appliances to communicate to the database using SSL. Use this procedure for each client appliance.
    </para>
    <procedure id="proc-Red_Hat_Satellite-Installation_Guide-Configuring_the_Database_to_use_SSL-Configuring_SSL_on_the_Satellite_server">
      <title>Configuring SSL on the client appliance</title>
      <step>
        <para>
          Log in as <literal>root</literal> to the client appliance.
        </para>
      </step>
      <step>
        <para>
          Create the <filename>.postgresql</filename> directory in your <literal>root</literal> user home directory.
        </para>
        <screen>
[root@cloudforms2 ~]# mkdir /root/.postgresql
        </screen>
        <para>
          The PostgreSQL client library, which CloudForms Management Engine also uses, looks to this directory for custom configuration files.
        </para>
      </step>
      <step>
        <para>
          Take the root certificate file that you have previously created at <filename>/tmp/root.crt</filename> by following <xref linkend="proc-Red_Hat_Satellite-Installation_Guide-Configuring_the_Database_to_use_SSL-Configuring_SSL_on_the_database_server" /> and copy it from the database appliance server to the <filename>/root/.postgresql</filename> directory on the client side:
        </para>
        <screen>
[root@cloudforms2 ~]# scp [database_appliance_fqdn]:/tmp/root.crt /root/.postgresql/root.crt</screen>
        <para>Where <replaceable>database_appliance_fqdn</replaceable> is the fully qualified domain name of the database appliance server.</para>
      </step>
      <step>
        <para>
          Test the connection between the appliance client and the database appliance server using the <command>psql</command>:
        </para>
        <screen>
[root@localhost ~]# psql -h [database_appliance_fqdn] -d vmdb_production
Password: ********
psql (9.2.8)
<emphasis role="bold">SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)</emphasis>
Type "help" for help.

vmdb_production=#
        </screen>
        <para>
          The <command>psql</command> displays information about the SSL connection, which indicates that the configuration succeeded. Enter <command>\q</command> to leave <command>psql</command>.
        </para>
      </step>
    </procedure>
    <para>
      Complete this procedure for each external appliance. This enhances the security of all database transactions in your CloudForms infrastructure.
    </para>
</section>
