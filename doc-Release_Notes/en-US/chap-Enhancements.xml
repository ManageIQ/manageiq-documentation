<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Release_Notes.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-Enhancements">
	<title>Enhancements</title> 
	<para>
		The following enhancements are available with Red Hat CloudForms 4.0 (CFME 5.4).
	</para>
	<variablelist>
		<varlistentry>
		  <term><application>AWS CloudFormation Integration</application></term>
			<listitem>
				<para>
					Users of Amazon Web Services have access to a service called CloudFormation. This service enables users to orchestrate the instantiation of multi-instance services such as LAMP. These are known as stacks when instantiated. A user can control the stacks to obtain key data about their states, such as the entry URL to the software service within the stack. A user can author the stack templates, or can upload them from other sources.
				</para>
				<para>
					The implementation of CloudFormation in Red Hat CloudForms offers the following areas of integration, with an ability to: 
					<itemizedlist>
						<listitem>
							<para>
								inventory all CloudFormation stacks and elements into CFME's VMDB.
							</para>
						</listitem>
						<listitem>
							<para>
								model the relationships of instances to their stacks, inclusive of the UI. Example, selecting an instance within a region that is within a stack, the UI shows this on the standard instance view.
							</para>
						</listitem>
						<listitem>
							<para>
								model the stack and its elements in the UI.
							</para>
						</listitem> 
						<!--
						<listitem>
							<para>
								import a CloudFormation template from a file and store the template in its native format within the VMDB.
							</para>
						</listitem>
						<listitem>
							<para>
								deploy a CloudFormation template from the VMDB to an AWS region.
							</para>
						</listitem> -->
					</itemizedlist>
				</para>
				<para>
					When importing a CloudFormation template into Red Hat CloudForms, the selected elements are converted according to their type. For example, lists convert to list boxes, and single items convert to text boxes.
				</para> 
				<!--<para>
					The importing of a CloudFormation template in Red Hat CloudForms includes: 
					<itemizedlist> 
						
						<listitem>
							<para>
								the dynamic creation of a service dialog to substitute the variables within the CloudFormation template at the time of deployment.
							</para>
						</listitem> 
						<listitem>
							<para>
								the elements chosen default to list boxes when lists, text boxes when single items etc.
							</para>
						</listitem> 
						
						<listitem>
							<para>
								the creation of a service item to deploy the CloudFormation template.
							</para>
						</listitem> 
					</itemizedlist>
				</para> -->
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>AWS Config Support</application></term>
			<listitem>
				<para>
					Amazon's AWS Config notifies subscribers of changes in a region through its Simple Notification Service (SNS). Red Hat CloudForms now subscribes to the SNS service for AWS Config deltas and converts the deltas into Red Hat CloudForms events. Users can configure the frequency of delta creation through the AWS Management Console, and can assign Red Hat CloudForms policies to supported AWS events listed below. Note that the AWS Config service must be enabled in the AWS Console.
				</para>
				<itemizedlist>
					<listitem>
						<para>
							AWS_EC2_Instance_CREATE
						</para>
					</listitem>
					<listitem>
						<para>
							AWS_EC2_Instance_running
						</para>
					</listitem>
					<listitem>
						<para>
							AWS_EC2_Instance_stopped
						</para>
					</listitem>
					<listitem>
						<para>
							AWS_EC2_Instance_shutting-down
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>IPv6</application></term>
			<listitem>
				<para>
					Red Hat CloudForms has implemented Internet Protocol version 6 (IPv6) for supporting providers on VMWare and RHEVM/oVirt networks. Hosts and Providers now use the hostname for communication instead of IP address. This feature provides the following enhancements: 
					<itemizedlist>
						<listitem>
							<para>
								Increased Address Space - The length of IPv6 addresses is 128-bit length, which is a significant gain over the 32-bit length of IPv4 addresses. This allows for an almost limitless number of unique IP addresses on a VMWare or RHEVM/oVirt provider.
							</para>
						</listitem>
						<listitem>
							<para>
								Increased Security - The IPv6 protocol improves on IPv4 with increased authentication and privacy measures to manage encryption and authentication between hosts on VMWare or RHEVM/oVirt providers. The size of the IPv6 address space makes it more secure against malicious activities such as IP scanning.
							</para>
						</listitem>
						<listitem>
							<para>
								Increased Efficiency - IPv6 packets can support a larger payload than IPv4 packets resulting in increased throughput and transport efficiency.
							</para>
						</listitem>
						<listitem>
							<para>
								Automated IP Address Allocation - IPv6 devices on VMWare or RHEVM/oVirt provider can now independently auto-configure themselves since, an IPv6 router can determine its own IPv6 address using data link layer addressing parameters.
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>Microsoft System Center Virtual Machine Manager Infrastructure Providers</application></term>
			<listitem>
				<para>
					Users can now provision virtual machines from templates using Microsoft System Center VMM infrastructure providers. The provisioning capabilities support the following:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							Ad-hoc - Provision a template from the <guilabel>Lifecycle</guilabel> menu.
						</para>
					</listitem>
					<listitem>
						<para>
							Service - Deploy a template as a <guilabel>Catalogue Item</guilabel> or <guilabel>Catalogue Bundle</guilabel>.
						</para>
					</listitem>
				</itemizedlist>
				<para>
					The provisioning state machine supports quotas, approval, and placement.
				</para>
				<para>
					You will need the following to integrate Red Hat CloudForms with Microsoft SCVMM:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							System Center Virtual Machine Manager 2012 R2
						</para>
					</listitem>
					<listitem>
						<para>
							Windows Powershell 4.0
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>OpenStack Infrastructure Providers</application></term>
			<listitem>
				<para>
					Users can now add OpenStack environments to the CloudForms Management Engine as infrastructure providers. This enhancement allows users to monitor and provision the infrastructure components in an OpenStack environment. This enhancement provides the following key features:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							Inventory
						</para>
					</listitem>
					<listitem>
						<para>
							Capacity and Utilization
						</para>
					</listitem>
					<listitem>
						<para>
							Eventing
						</para>
					</listitem>
					<listitem>
						<para>
							Automation/Provisioning
						</para>
					</listitem>
				</itemizedlist>
				<para>
					OpenStack Infrastructure providers support the deployment, scale out, and scale down of deployment roles.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>OpenStack Instances to Boot from Volume</application></term>
			<listitem>
				<para>
					This enhancement allows instances created in Red Hat Enterprise Linux OpenStack Platform to boot from a specified volume from an existing selection of block volumes, and not from an Image, which was the only supported option by default.
				</para>
				<para>
					This enhancement: 
					<itemizedlist>
						<listitem>
							<para>
								enables automate to pass the required parameters to OpenStack to use volumes as booting devices on an instance.
							</para>
						</listitem> 
						<!--
						<listitem>
							<para>
								exposes this functionality in the UI. For example, when provisioning an OpenStack instance, the disk layout is configurable enabling selection of volume(s) to be added to the instance used for the booting.
							</para>
						</listitem> -->
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>Remote Control Consoles</application></term>
			<listitem>
				<para>
					Red Hat CloudForms now offers remote control consoles for Red Hat Enterprise Virtualization and VMware vSphere. In order for this to work with VMware, individual virtual machines or the entire infrastructure must be configured to allow VNC access.
				</para>
				<para>
					Support for SPICE with Red Hat Enterprise Virtualization is in Technology Preview. See <ulink url="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</ulink>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>REST API Enhancements</application></term>
			<listitem>
				<para>
					The CloudForms REST API v2 now provides parity with the SOAP API. Red Hat recommends using the REST API for all integration projects, as the SOAP API will be deprecated in the next major Red Hat CloudForms release.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>Retirement</application></term>
			<listitem>
				<para>
					Red Hat CloudForms Management Engine now provides a new feature to the virtual machine retirement and service retirement functionality, by adding a retirement state machine. The retirement state machine provides flexibility to easily modify and customize actions taken during retirement. The retirement module in old versions of CloudForms Management Engine relied heavily on hidden workflow processing and policy definitions, which significantly limited its usefulness.
				</para>
				<para>
				  The new retirement state machine improves upon the old code in the following ways:
				    <itemizedlist>
				      <listitem>
					<para>
					  The new retirement state machine exposes many stages of the retirement process by adding two new events:
					    <variablelist>
					      <varlistentry>
						<term></term>
						<listitem>
						  <para>
						    request_vm_retire event
						  </para>
						  <para>
						    request_service_retire
						  </para>
						</listitem>
					      </varlistentry>
					    </variablelist>  
					</para>
					<para>
					  See <ulink url="https://access.redhat.com/documentation/en-US/Red_Hat_CloudForms/3.2/html/Lifecycle_and_Automation_Guide/Phase_5_Retirement1.html">B.5. Phase 5: Retirement</ulink> to view the new retirement workflow.
					</para>
				      </listitem>
				      <listitem>
					<para>
					  Adding a retirement_state attribute that allows for better tracking and error detection. This attribute can be in 3 states: retiring, retired, or error. This helps address the long standing issue of multiple conflicting retirement states.
					</para>
				      </listitem>
				      <listitem>
					<para>
					  There is no requirement to define a retirement policy any more.
					</para>
				      </listitem>
				    </itemizedlist>  
				</para>
			</listitem>			
		</varlistentry>
		<varlistentry>
			<term>Service Dialog</term>
			<listitem>
				<para>
				CatalogItemInitialization and CatalogBundleInitialization are Service Provisioning State Machines created to simplify the process of creating full-featured Service Catalog Items and Bundles. These Services provide CFME the ability to create rich service dialogs, without the need for any Ruby scripting. 
				</para>
				<para>
				These two State Machine Instances, and their supporting Methods, have been completely re-written for Red Hat CloudForms Management Engine 5.4. 
				</para>
				<para>
				  Previously in CFME, the catalogbundleinitialization and catalogiteminitialization Automate Methods had duplicated parsing code and had issues where tagging and options setting was not working correctly. To fix this issue, a new Automate Method 'dialog_parser' has been added. This new Method is executed prior to catalogbundleinitialization and catalogiteminitialization Methods to provide consolidated and configurable dialog parsing.
				</para>
				<para>
				  Benefits of this Enhancement:
				    <itemizedlist>
				      <listitem>
					<para>
					  Single copy of parsing code in separate Automate Method. 
					</para>
				      </listitem>
				      <listitem>
					<para>
					  Normalized Dialog information provided to Service Provision State Machine Methods.
					</para>
				      </listitem>
				      <listitem>
					<para>
					  Enhanced clarity by the separation of dialog options and tags.
					</para>
				      </listitem>
				      <listitem>
					<para>
					 Added tag_control support.
					</para>
				      </listitem>
				      <listitem>
					<para>
					 Ability to override the service_name, service_description and vm_name. 
					</para>
				      </listitem>
				      <listitem>
					<para>
					 Service cleanup for failed service provision.
					</para>
				      </listitem>
				    </itemizedlist>				    
				</para>
			</listitem>
		</varlistentry>		
		<varlistentry>
			<term><application>ServiceNOW CMDB Support</application></term>
			<listitem>
				<para>
					Red Hat CloudForms now provides the ability to interact with ServiceNOW CMDB servers. Insight data can now be sent to ServiceNOW CMDB servers as part of provisioning, retirement, and reconfiguration. Automation work flows can now be integrated with ServiceNOW for insight data.
				</para>
				<para>
					Support for ServiceNow CMBD integration is in Technology Preview. See <ulink url="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</ulink>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><application>User Interface Locale</application></term>
			<listitem>
				<para>
					Users can now change the Red Hat CloudForms' user interface locale to specify either English or Japanese. See <xref linkend="chap-Changing_the_UI_Locale" /> for the procedure on how to change the user interface locale.
				</para>
			</listitem>
		</varlistentry>		
	</variablelist>
	<xi:include href="topics/Methods_for_Upgrading.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
</chapter>

