<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../Settings_and_Operations_Guide.ent">
%BOOK_ENTITIES;
]>
<section id="Configuration_Parameters" remap="TID_24493">
	<title>Configuration Parameters</title> 
	<!--	<para>
		<filename>vmdb.yml</filename>, the CFME Main Configuration File, contains parameters for configuring the CFME Server. These parameters should be set though the CFME Console, either directly by setting a specific option or using the Advanced page under Operations for your selected CFME Server. If a parameter listed here is not present in your <filename>vmdb.yml</filename> file, then the default value is automatically used.
	</para>
	<warning>
		<para>
			Do not make changes to the <filename>vmdb.yml</filename> unless instructed to by Red Hat. Making changes could render your CFME Appliance unstartable.
		</para>
	</warning>
	<procedure>
		<title>To Edit the Main Configuration File</title>
		<step>
			<para>
				Navigate to <menuchoice><guimenu>Configure</guimenu><guimenuitem>Configuration</guimenuitem><guimenuitem>Settings</guimenuitem></menuchoice>.
			</para>
		</step>
		<step>
			<para>
				Click <guilabel>Zones</guilabel>.
			</para>
		</step>
		<step>
			<para>
				Click the Zone where the CFME Server is located.
			</para>
		</step>
		<step>
			<para>
				Click on the CFME Server.
			</para>
		</step>
		<step>
			<para>
				Click <guilabel>Advanced</guilabel>.
			</para>
		</step>
		<step>
			<para>
				Select <guilabel>Main Configuration File</guilabel>.
			</para>
		</step>
		<step>
			<para>
				Modify your configuration options.
			</para>
		</step>
		<step>
			<para>
				Click <guilabel>Save</guilabel>.
			</para>
		</step>
	</procedure>
	<para>
		By default, <filename>vmdb.yml</filename> is located in <filename>/var/www/miq/vmdb/config</filename>. <filename>vmdb.tmpl.yml</filename> contains the defaults. If you are not using the CFME Console, make the changes in <filename>vmdb.yml.db</filename>, then rename it to <filename>vmdb.yml</filename>. Within a few minutes, the CFME Appliance will update the changes.
	</para>
	<note>
		<para>
			This is not meant to be an exhaustive list and parameters might change over time.
		</para>
	</note> -->
	<table frame="all">
		<title>authentication</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameters
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							amazon_key
						</para>
					</entry>
					<entry>
						<para>
							If using Amazon for the authentication mode, specify your Amazon Key. This is the same as Amazon Access Key in Configuration-Operations- Server-Amazon Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							amazon_secret
						</para>
					</entry>
					<entry>
						<para>
							If using Amazon for the authentication mode, specify your Amazon Secret. This is the same as Amazon Secret Key in Configuration-Operations- Server-Amazon Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							basedn
						</para>
					</entry>
					<entry>
						<para>
							If using ldap for the authentication mode, specify your Base DN. This is the same as Base DN in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							bind_dn
						</para>
					</entry>
					<entry>
						<para>
							The user name to bind to the LDAP server. This user must have read access to all users and groups that will be used for CFME authentication and role assignment. This is the same as Bind DN in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							bind_pwd:
						</para>
					</entry>
					<entry>
						<para>
							The password for the bind_dn user. This is the same as Bind Password in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							get_direct_groups
						</para>
					</entry>
					<entry>
						<para>
							Use this to get the LDAP roles from the LDAP users' home forest. This is the same as Get Roles from Home Forest in the <guilabel>Authentication</guilabel> page for the CFME Server.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							group_memberships_max_depth
						</para>
					</entry>
					<entry>
						<para>
							When traversing group memberships in the LDAP directory it will stop at this value.
						</para>
						<para>
							Default: 2
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ldaphost
						</para>
					</entry>
					<entry>
						<para>
							Use ldaphost to specify the fully qualified domain name of your LDAP server. This is the same as LDAP Host Name in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ldapport
						</para>
					</entry>
					<entry>
						<para>
							Specify the port of your LDAP server. This is the same as LDAP Port in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: 389
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							mode
						</para>
					</entry>
					<entry>
						<para>
							Use database to use the VMDB for security. Use ldap or ldaps to use directory services. This is the same as Mode in Configuration-Operations- Server-Authentication in the CFME Console.
						</para>
						<para>
							Default: database
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							user_type
						</para>
					</entry>
					<entry>
						<para>
							Use userprincipalname to type the user name in the format of <emphasis>user@domainname</emphasis>. Use mail to login with the user's e-mail address. Use dn-cn for Distinguished Name (CN=&lt;user&gt;) or dn-uid Distinguished Name (UID=&lt;user&gt;) to use just the user name, but be sure to enter the proper user_suffix for either one. This is the same as User Type in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: userprincipalname
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							user_suffix
						</para>
					</entry>
					<entry>
						<para>
							Domain name to be used with user_type of dn-cn or dn-uid. This is the same as User Suffix in Configuration-Operations- Server-LDAP Settings in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>coresident_miqproxy</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameters
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							use_vim_broker
						</para>
					</entry>
					<entry>
						<para>
							Specify if you want the coresident SmartProxy to use a shared connection through the VIM broker to communicate with the VC or ESX host for SmartState Analysis. If it is disabled, then each SmartProxy SmartState Analysis would create its own connection.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							concurrent_per_ems
						</para>
					</entry>
					<entry>
						<para>
							Specify the number of co-resident SmartProxy SmartState Analyses that can be run against a specific management system at the same time.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							concurrent_per_host
						</para>
					</entry>
					<entry>
						<para>
							Specify the number of co-resident SmartProxy SmartState Analyses that can be run against a specific host at the same time.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							scan_via_host
						</para>
					</entry>
					<entry>
						<para>
							If you change scan_via_host to false, CFME will use the Management System to scan which is limited by the concurrent_per_ems setting instead of the concurrent_per_host setting. Note this will greatly increase traffic to the Management System.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>ems_refresh</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							capture_vm_created_on_date
						</para>
					</entry>
					<entry>
						<para>
							Set to false to turn off historical event retrieval. Set to true to turn on. By setting the flag to true CFME will try to set the "ems_created_on" column in the vms table after an ems refresh for new VMs and any VMs with a nil "ems_created_on" value. CFME looks at event information in our database as well as looking up historical event data from the management system. This is optional since the historical lookup could timeout.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							collect_advanced_settings
						</para>
					</entry>
					<entry>
						<para>
							Set to false if you do not want to collect advanced Virtual Machine settings during a management system refresh. This will increase the speed of the refresh, but less data will be collected. If the parameter is not listed, then the value is true.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ec2
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							get_private_images
						</para>
					</entry>
					<entry>
						<para>
							For EC2 refreshes only; whether or not to retrieve private images
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							get_public_images
						</para>
					</entry>
					<entry>
						<para>
							For EC2 refreshes only; whether or not to retrieve public images
						</para>
						<para>
							Default: false
						</para>
						<para>
							Warning: setting get_public_images to <literal>true</literal> loads several thousand images in the VMDB by default and may cause performance issues.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							get_shared_images
						</para>
					</entry>
					<entry>
						<para>
							For EC2 refreshes only; whether or not to retrieve shared images.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ignore_terminated_instances
						</para>
					</entry>
					<entry>
						<para>
							For EC2 refreshes only; whether or not to ignore terminated instances
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							full_refresh_threshold
						</para>
					</entry>
					<entry>
						<para>
							The number of targeted refreshes requested before they are rolled into a full refresh. For example, if the system and/or the user target a refresh against 7 VMs and 2 Hosts (9 targets), when the refresh actually occurs it will do a partial refresh against those 9 targets only. However, if a 10th had been added, the system would perform a full EMS refresh instead
						</para>
						<para>
							Default: 100
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							raise_vm_snapshot_complete_if_created_within:
						</para>
					</entry>
					<entry>
						<para>
							Raises vm_snapshot_complete event for a snapshot being added to VMDB only if the create time in Virtual Center is within the configured period of time. This prevents raising events for old snapshots when a new VC is added to CFME.
						</para>
						<para>
							Default: 15.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							refresh_interval
						</para>
					</entry>
					<entry>
						<para>
							Scheduler does a periodic full EMS refresh every refresh_interval
						</para>
						<para>
							Default: 24.hours
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>host_scan</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							queue_timeout
						</para>
					</entry>
					<entry>
						<para>
							Time period after which a host SmartState analysis will be considered timed out..
						</para>
						<para>
							Default: 20.minutes
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>log</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							level
						</para>
					</entry>
					<entry>
						<para>
							Specify the required level of logging for the CFME Appliance. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal. This is the same as Log Level in Configuration-Operations- Server-Logging in the CFME Console and applies immediately to the evm.log file.
						</para>
						<para>
							Default: info
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_aws
						</para>
					</entry>
					<entry>
						<para>
							Specify the level of logging for Amazon Web Services communications. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal. This applies to the aws.log file.
						</para>
						<para>
							Default: info
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_aws_in_evm
						</para>
					</entry>
					<entry>
						<para>
							Specify what level of Amazon Web Services communication log should be also shown in evm.log. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal.
						</para>
						<para>
							Default: error
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_fog
						</para>
					</entry>
					<entry>
						<para>
							Specify the level of logging for Fog communications. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal. This applies to the fog.log file.
						</para>
						<para>
							Default: info
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_fog_in_evm
						</para>
					</entry>
					<entry>
						<para>
							Specify what level of Fog communication log should be also shown in evm.log. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal.
						</para>
						<para>
							Default: error
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_rails
						</para>
					</entry>
					<entry>
						<para>
							Specify the level of logging for Rails. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal. Once changed, this applies immediately to the production.log file.
						</para>
						<para>
							Default: info
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_rhevm
						</para>
					</entry>
					<entry>
						<para>
							Specify the level of logging for Red Hat communications. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal. This applies to the rhevm.log file.
						</para>
						<para>
							Default: warn
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_rhevm_in_evm
						</para>
					</entry>
					<entry>
						<para>
							Specify what level of Red Hat communication log should be also shown in evm.log. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal.
						</para>
						<para>
							Default: error
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_vim
						</para>
					</entry>
					<entry>
						<para>
							Specify the level of logging for VIM (communication with VMware ESX and Virtual Center). Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal. This applies to the vim.log file.
						</para>
						<para>
							Default: warn
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							level_vim_in_evm
						</para>
					</entry>
					<entry>
						<para>
							Specify what level of vim logging should be also shown in evm.log. Possible levels from most detailed to least detailed are: debug, info, warn, error, fatal.
						</para>
						<para>
							Default: error
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>db_stats</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							enabled
						</para>
					</entry>
					<entry>
						<para>
							Specify if you want to keep track of the number of queries, size of queries, number of responses, size of response, min/max for each, number of established connections at for each server process. This information will show in the EVM log.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							log_frequency
						</para>
					</entry>
					<entry>
						<para>
							How frequently in seconds the process will log the database statistic in seconds.
						</para>
						<para>
							Default: 60
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>callsites</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							enabled
						</para>
					</entry>
					<entry>
						<para>
							Specify if you want keep track of the code that is accessing the database. Enabling call sites will decrease performance because of the amount of information tracked. The db_stats: enabled parameter must be set to true to use this.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							depth
						</para>
					</entry>
					<entry>
						<para>
							Specify how many levels in the call stack to track for each database access.
						</para>
						<para>
							Default: 10
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							min_threshold
						</para>
					</entry>
					<entry>
						<para>
							Do not keep track of code that does not access the database this many times per log_frequency.
						</para>
						<para>
							Default: 10
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							path
						</para>
					</entry>
					<entry>
						<para>
							Set the path for the CFME Appliance log. This is the same as Log Path in Configuration-Operations- Server-Logging in the CFME Console.
						</para>
						<para>
							Default: If no value is present, the path is /var/www/miq/vmdb/log.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							line_limit
						</para>
					</entry>
					<entry>
						<para>
							Limit how many characters are retained in a single log line. 0 means no limit.
						</para>
						<para>
							Default: 0
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>collection</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							ping_depot
						</para>
					</entry>
					<entry>
						<para>
							Whether to use TCP port ping to the log depot before performing log collection.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ping_depot_timeout
						</para>
					</entry>
					<entry>
						<para>
							Specify how long in seconds to wait for response from log depot before deciding that the TCP port ping failed.
						</para>
						<para>
							Default: 20
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							current
						</para>
					</entry>
					<entry>
						<para>
							When collecting logs, specifies what is considered current logging as opposed to archived logging.
						</para>
						<para>
							Default: :pattern:
						</para>
						<para>
							- log/*.log
						</para>
						<para>
							- log/apache/*.log
						</para>
						<para>
							- log/*.txt
						</para>
						<para>
							- config/*
						</para>
						<para>
							- /var/opt/rh/rh-postgresql94/lib/pgsql/data/*.conf
						</para>
						<para>
							- /var/opt/rh/rh-postgresql94/lib/pgsql/data/pg_log/*
						</para>
						<para>
							- /var/log/syslog*
						</para>
						<para>
							- /var/log/daemon.log*
						</para>
						<para>
							- /etc/default/ntp*
						</para>
						<para>
							- /var/log/messages*
						</para>
						<para>
							- /var/log/cron*
						</para>
						<para>
							- BUILD
						</para>
						<para>
							- GUID
						</para>
						<para>
							- VERSION
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							archive
						</para>
					</entry>
					<entry>
						<para>
							Specifies what is considered archived logging. The default pattern is blank which means *.gz files in the log directory.
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>log_depot</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							uri
						</para>
					</entry>
					<entry>
						<para>
							Specify the uri for the log depot. This is the same as URI in <menuchoice><guisubmenu>Configure</guisubmenu><guisubmenu>Configuration</guisubmenu><guisubmenu>Diagnostics</guisubmenu></menuchoice> Collect Logs in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							username
						</para>
					</entry>
					<entry>
						<para>
							Specify the user name for the log depot. This is the same as User ID in <menuchoice><guisubmenu>Configure</guisubmenu><guisubmenu>Configuration</guisubmenu><guisubmenu>Diagnostics</guisubmenu></menuchoice> Collect Logs in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							password
						</para>
					</entry>
					<entry>
						<para>
							Specify the password for the user for the log depot. This is the same as Password in <menuchoice><guisubmenu>Configure</guisubmenu><guisubmenu>Configuration</guisubmenu><guisubmenu>Diagnostics</guisubmenu></menuchoice> Collect Logs in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>performance</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="30%" />
			<colspec colname="c2" colwidth="70%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							capture_threshold
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vm
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again
						</para>
						<para>
							Default: 50.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							host
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again
						</para>
						<para>
							Default: 50.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ems_cluster
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again
						</para>
						<para>
							Default: 50.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							storage
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again
						</para>
						<para>
							Default: 120.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							capture_threshold_with_alerts
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							host
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again. This value is used instead of capture_threshold for Hosts that have alerts assigned based on real time Capacity &amp; Utilization data.
						</para>
						<para>
							Default: 20.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ems_cluster
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again. This value is used instead of capture_threshold for clusters that have alerts assigned based on real time Capacity &amp; Utilization data.
						</para>
						<para>
							Default: 50.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vm
						</para>
					</entry>
					<entry>
						<para>
							Amount of time in minutes to wait after capture before capturing again. This value is used instead of capture_threshold for VMs that have alerts assigned based on real time Capacity &amp; Utilization data.
						</para>
						<para>
							Default: 20.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							concurrent_requests
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							hourly
						</para>
					</entry>
					<entry>
						<para>
							Number of concurrent VC requests to make when capturing hourly raw metrics
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							realtime
						</para>
					</entry>
					<entry>
						<para>
							Number of concurrent VC requests to make when capturing real time raw metrics
						</para>
						<para>
							Default: 20
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							history
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							initial_capture_days
						</para>
					</entry>
					<entry>
						<para>
							How many days to collect data for on first collection
						</para>
						<para>
							Default: 0
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							Keep_daily_performances
						</para>
					</entry>
					<entry>
						<para>
							How long to keep daily performance data in the VMDB
						</para>
						<para>
							Default: 6.months
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							keep_realtime_performances
						</para>
					</entry>
					<entry>
						<para>
							How long to keep realtime performance data in the VMDB
						</para>
						<para>
							Default: 4.hours
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							keep_hourly_performances
						</para>
					</entry>
					<entry>
						<para>
							How long to keep hourly performance data in the VMDB
						</para>
						<para>
							Default: 6.months
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							purge_window_size
						</para>
					</entry>
					<entry>
						<para>
							When the purge needs to delete rows which are older than the keep_realtime_performances, keep_hourly_performances, and keep_daily_performances values, this value sets how many rows to delete in each batch. For example, a value of 1000 will cause us to issue ten 1,000 row deletes.
						</para>
						<para>
							Default: 1000
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>repository_scanning</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							defaultsmartproxy
						</para>
					</entry>
					<entry>
						<para>
							Specify the SmartProxy for repository scanning. This is the same as Default Repository Smartproxy in Configuration-Operations- Server-VM Server Control in the CFME Console.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>server</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							case_sensitive_name_search
						</para>
					</entry>
					<entry>
						<para>
							Specifiy if you want the search by name on configuration item screens to be case senstivite.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							company
						</para>
					</entry>
					<entry>
						<para>
							Specify the label you want to use for your company's tagging. This is the same as Company Name in Configuration-Operations- Server-Basic Info.
						</para>
						<para>
							Default: "My Company"
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							custom_logo
						</para>
					</entry>
					<entry>
						<para>
							Specify if you want to use a custom logo. This is the same as Use Custom Logo in Configuration-Custom Logo-Logo Selection.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							events
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							disk_usage_gt_percent
						</para>
					</entry>
					<entry>
						<para>
							For CFME operational alerts, specify at what threshold the disk usage alerts will be triggered.
						</para>
						<para>
							Default: 80
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							heartbeat_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long to wait until the server heartbeat is considered timed out. if the timeout is exceeded, other appliances in the zone/region can vie for the roles active on the timed out CFME Appliance.
						</para>
						<para>
							Default: 2.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							host
						</para>
					</entry>
					<entry>
						<para>
							CFME Server's IP address
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							hostname
						</para>
					</entry>
					<entry>
						<para>
							CFME Server's hostname
						</para>
						<para>
							Default: localhost.localdomain
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							listening_port
						</para>
					</entry>
					<entry>
						<para>
							Specify the port number on which the web server is listening.
						</para>
						<para>
							Note: This does not set the port that VMDB listens on. When deploying the SmartHost from the CFME Appliance, it tells the SmartHost (miqhost) what port to talk to the VMDB on.
						</para>
						<para>
							Default: "443"
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							mks_version
						</para>
					</entry>
					<entry>
						<para>
							Specify the version of the VMware MKS Plugin to use for the VM Console. This is the same as VMware MKS Plugin Version in Configuration-Operations- Server-VM Console.
						</para>
						<para>
							Default : 2.1.0.0
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							name
						</para>
					</entry>
					<entry>
						<para>
							Set the name to display for the CFME Appliance that you are logged on to in the CFME Console. This is the same as Appliance Name in Configuration-Operations- Server-Basic Information.
						</para>
						<para>
							Default : EVM
						</para>
					</entry>
				</row> 
				<!--<row>
					<entry>
						<para>
							restore_points_to_keep
						</para>
					</entry>
					<entry>
						<para>
							Specifies how many restore points to keep from fixpack upgrades.
						</para>
						<para>
							Default: 2
						</para>
					</entry> 
				</row> -->
				<row>
					<entry>
						<para>
							role
						</para>
					</entry>
					<entry>
						<para>
							Specify the roles for this CFME Server, separated by commas without spaces. The possible values are automate, database_operations, database_synchronization, ems_inventory, ems_metrics_collector, ems_metrics_coordinator, ems_metrics_processor, ems_operations, event, notifier, reporting, scheduler, smartproxy, smartstate, user_interface, web_services. This is the same as Server Roles in Configuration-Operations- Server- Server Control.
						</para>
						<para>
							Default: database_operations, event, reporting, scheduler, smartstate, ems_operations, ems_inventory, user_interface, web_services
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							session_store
						</para>
					</entry>
					<entry>
						<para>
							Where to store the session information for all web requests. The possible values are sql, memory, or cache. SQL stores the session information in the database regardless of the type of database server. Memory stores all the session information in memory of the server process. Cache stores the information in a memcache server.
						</para>
						<para>
							Default: cache
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							startup_timeout
						</para>
					</entry>
					<entry>
						<para>
							The amount of time in seconds that the server will wait and prevent logins during server startup before assuming the server has timed out starting and will redirect the user to the log page after login.
						</para>
						<para>
							Default: 300
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							timezone
						</para>
					</entry>
					<entry>
						<para>
							Set the timezone for the CFME Appliance.
						</para>
						<para>
							Default: UTC
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vnc_port
						</para>
					</entry>
					<entry>
						<para>
							If using VNC for remote console, the port used by VNC.
						</para>
						<para>
							Default: 5800
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							zone
						</para>
					</entry>
					<entry>
						<para>
							Set the Zone for this appliance belongs. This is the same as Zone in Configuration-Operations- Server-Basic Information.
						</para>
						<para>
							Default : default
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							:worker_monitor
						</para>
					</entry>
					<entry>
						<para>
							Starts and monitors the workers. Parameters specified here will override those set in the workers:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the worker monitor checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							miq_server_time_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much time to give the server to heartbeat before worker monitor starts to take action against non-responding server.
						</para>
						<para>
							Default: 2.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							sync_interval
						</para>
					</entry>
					<entry>
						<para>
							Time interval to sync active roles and configuration for all workers.
						</para>
						<para>
							Default: 30.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							wait_for_started_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long to wait for a started worker to heartbeat before considering the worker timed out.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							kill_algorithm
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							name
						</para>
					</entry>
					<entry>
						<para>
							Criteria used to start killing workers.
						</para>
						<para>
							Default: used_swap_percent_gt_value
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							value
						</para>
					</entry>
					<entry>
						<para>
							Value of the criteria used.
						</para>
						<para>
							Default: 80
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							start_algorithm
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							name
						</para>
					</entry>
					<entry>
						<para>
							After server startup, criteria that must be met to decide if the CFME Server can start a new worker.
						</para>
						<para>
							Default: used_swap_percent_lt_value
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							value
						</para>
					</entry>
					<entry>
						<para>
							Value of criteria used.
						</para>
						<para>
							Default: 60
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>session</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							interval
						</para>
					</entry>
					<entry>
						<para>
							Set the time interval in seconds for checking inactive sessions in CFME Console.
						</para>
						<para>
							Default: 60
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							timeout
						</para>
					</entry>
					<entry>
						<para>
							Set the time period in seconds in which inactive console sessions are deleted. This is the same as Session Timeout in Configuration-Operations- Server-Authentication in the CFME Console.
						</para>
						<para>
							Default: 3600
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memcache_server
						</para>
					</entry>
					<entry>
						<para>
							If you choose memory for session_store, you need to specify the memcache_server to retrieve the session information from.
						</para>
						<para>
							Default: 127.0.1.1:11211
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memcache_server_opts
						</para>
					</entry>
					<entry>
						<para>
							Options to send to memcache server.
						</para>
						<para>
							: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							show_login_info
						</para>
					</entry>
					<entry>
						<para>
							Specify whether or not you want to see login info on start page.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>smartproxy_deploy</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							queue_timeout
						</para>
					</entry>
					<entry>
						<para>
							Timeout for host smartproxy deploy job.
						</para>
						<para>
							Default: 30.minutes
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>smtp</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							host
						</para>
					</entry>
					<entry>
						<para>
							Specify the hostname of the smtp mail server. This is the same as Host in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: localhost
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							port
						</para>
					</entry>
					<entry>
						<para>
							Specify the port of the smtp mail server. This is the same as Port in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: "25"
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							domain
						</para>
					</entry>
					<entry>
						<para>
							Specify the domain of the smtp mail server. This is the same as Domain in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: mydomain.com
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							authentication
						</para>
					</entry>
					<entry>
						<para>
							Specify the type of authentication of the smtp mail server. This is the same as Authentication in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: login
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							user_name
						</para>
					</entry>
					<entry>
						<para>
							Specify the username required for login to the smtp mail server. This is the same as User Name in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: evmadmin
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							password
						</para>
					</entry>
					<entry>
						<para>
							Specify the encrypted password for the user_name account. This is the same as Password in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: blank
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							from
						</para>
					</entry>
					<entry>
						<para>
							Set the address that you want to send e-mails from. This is the same as From E-mail Address in Configuration-Operations-Server-Outgoing SMTP E-mail Server.
						</para>
						<para>
							Default: <ulink url="mailto:cfadmin@cfserver.com">cfadmin@cfserver.com</ulink>
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>snapshots</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							create_free_percent
						</para>
					</entry>
					<entry>
						<para>
							Ensures the % of free space available on the main datastore (datastore where vmx file is located) can support the % growth of the snapshot. The default is to require space for 100% of the provisioned size of all disks that are taking part in the snapshot. A value of 0 means do not check for space before creating the snapshot.
						</para>
						<para>
							Default: 100
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							remove_free_percent
						</para>
					</entry>
					<entry>
						<para>
							Ensures the % of free space available on the main datastore (datastore where vmx file is located) has the % free space available to support the snapshot deletion process. Note that the deletion process consists of first composing a new snapshot then removing it once the original snapshot to be deleted has been collapsed in the VM. The default is to require 100% of the size of all disks to complete this process. A value of 0 means do not check for space before removing the snapshot.
						</para>
						<para>
							Default: 100
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>webservices</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							contactwith
						</para>
					</entry>
					<entry>
						<para>
							Set to ipaddress to contact miqhost using the IP address. Set to hostname to contact miqhost by its hostname. Set to resolved_ipaddress to take the hostname and resolve it to an IP address.
						</para>
						<para>
							Default: ipaddress
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							mode
						</para>
					</entry>
					<entry>
						<para>
							Set to invoke to use webservices. Set to disable to turn off webservices. This is the same as Mode in Configuration-Operations- Server-Web Services in the CFME Console.
						</para>
						<para>
							Default: invoke
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nameresolution
						</para>
					</entry>
					<entry>
						<para>
							If set to true, the hostname will be resolved to an IP address and saved with the host information in the VMDB.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							security
						</para>
					</entry>
					<entry>
						<para>
							If Web Services are enabled, you can set this to ws-security. This is the same as Security in Configuration-Operations- Server-Web Services in the CFME Console.
						</para>
						<para>
							Note: This is not currently supported.
						</para>
						<para>
							Default: none
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							timeout
						</para>
					</entry>
					<entry>
						<para>
							Specify the web service timeout in seconds.
						</para>
						<para>
							Default: 120
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							use_vim_broker
						</para>
					</entry>
					<entry>
						<para>
							Controls if the vim_broker is used to communicate with VMware infrastructure.
						</para>
						<para>
							Default: true
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table frame="all">
		<title>workers</title>
		<tgroup align="left" cols="2" colsep="1" rowsep="1">
			<colspec colname="c1" colwidth="40%" />
			<colspec colname="c2" colwidth="60%" />
			<thead>
				<row>
					<entry>
						<para>
							Parameter
						</para>
					</entry>
					<entry>
						<para>
							Description
						</para>
					</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>
						<para>
							worker_base
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							defaults
						</para>
					</entry>
					<entry>
						<para>
							If the following parameters are NOT explicitly defined for a specific worker, then these values will be used.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							gc_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to do garbage collection for this worker.
						</para>
						<para>
							Default: 15.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 3.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll_method
						</para>
					</entry>
					<entry>
						<para>
							If set to normal, the worker checks for work the number of seconds set in the poll parameter. If set to escalate, the worker will increase the time between checks when there is no work to be done.
						</para>
						<para>
							Default: normal
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll_escalate_max
						</para>
					</entry>
					<entry>
						<para>
							The maximum number of time to wait between checks for work. Poll_method must be set to escalate for this option to be used.
						</para>
						<para>
							Default: 30.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							heartbeat_freq
						</para>
					</entry>
					<entry>
						<para>
							How often to "heartbeat" the worker
						</para>
						<para>
							Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							heartbeat_method
						</para>
					</entry>
					<entry>
						<para>
							Set which way to dispatch work. Possible values are sql or drb.
						</para>
						<para>
							Default: drb
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							heartbeat_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long to wait until the worker heartbeat is considered timed out
						</para>
						<para>
							Default: 2.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							parent_time_threshold
						</para>
					</entry>
					<entry>
						<para>
							How long to allow the parent to go without heartbeating before considering the "parent' not responding. For workers, the worker monitor is the parent. For Worker monitor, the Server is the parent.
						</para>
						<para>
							Default: 3.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 150.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 10
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							restart_interval
						</para>
					</entry>
					<entry>
						<para>
							How long to let a worker remain up before asking it to restart. All queue based workers are set to 2.hours and every other worker does not get restarted by a 0.hours value.
						</para>
						<para>
							Default: 0.hours
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							starting_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long to wait before checking a worker's heartbeat when it is starting up to mark it as not reponding, similar to a grace period before you begin monitoring it.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							event_catcher
						</para>
					</entry>
					<entry>
						<para>
							Associated with Event Monitor Server Role. Captures ems events and queues them up for the event_handler to process. Parameters specified here will override those set in the worker_base:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ems_event_page_size
						</para>
					</entry>
					<entry>
						<para>
							Internal system setting which sets the maximum page size for the event collector history. This should not be modified.
						</para>
						<para>
							Default: 100
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ems_event_thread_shutdown_timeout
						</para>
					</entry>
					<entry>
						<para>
							Internal system setting which determines how long the event catcher at shutdown will wait for the event monitor thread to stop. This should not be modified.
						</para>
						<para>
							Default: 10.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 2.gigabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 1.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							event_catcher_redhat
						</para>
					</entry>
					<entry>
						<para>
							Contains settings that supersede the event_catcher for event_catcher_redhat.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							event_catcher_vmware
						</para>
					</entry>
					<entry>
						<para>
							Contains settings that supersede the event_catcher for event_catcher_vmware.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 1.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							event_catcher_openstack
						</para>
					</entry>
					<entry>
						<para>
							Contains settings that supersede the event_catcher for event_catcher_openstack.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							topics
						</para>
					</entry>
					<entry>
						<para>
							List of AMQP topics that should be monitored by CFME when gathering events from OpenStack.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							duration
						</para>
					</entry>
					<entry>
						<para>
							Qpid Specific. Length of time (in seconds) the receiver should wait for a message from the Qpid broker before timing out.
						</para>
						<para>
							Default: 10.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							capacity
						</para>
					</entry>
					<entry>
						<para>
							Qpid Specific. The total number of messages that can be held locally by the Qpid client before it needs to fetch more messages from the broker.
						</para>
						<para>
							Default: 50.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							amqp_port
						</para>
					</entry>
					<entry>
						<para>
							Port used for AMQP.
						</para>
						<para>
							Default: 5672
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							replication_worker:
						</para>
					</entry>
					<entry>
						<para>
							Performs database replication tasks. Settings for Database Synchronization Server Role. Parameters specified here will override those set in the queue_worker_base:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							connection_pool_size
						</para>
					</entry>
					<entry>
						<para>
							Maximum number of database connections allowed per process.
						</para>
						<para>
							Default: 5
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 200.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							replication:
						</para>
					</entry>
					<entry>
						<para>
							This section contains information for the destination database for the replication.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							destination:
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							database
						</para>
					</entry>
					<entry>
						<para>
							Name of destination database.
						</para>
						<para>
							Default: vmdb_production
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							username: root
						</para>
					</entry>
					<entry>
						<para>
							Username for the destination database.
						</para>
						<para>
							Default: root
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							password
						</para>
					</entry>
					<entry>
						<para>
							Stores password for destination database in encrypted format.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							host
						</para>
					</entry>
					<entry>
						<para>
							Host of the destination database.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							port
						</para>
					</entry>
					<entry>
						<para>
							Port of the destination database.
						</para>
						<para>
							Default: 5432
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							include_tables
						</para>
					</entry>
					<entry>
						<para>
							Lists tables included in the replication. Do NOT modify unless specifically instructed to do so by ManageIQ support.
						</para>
						<para>
							Default: include all, exclude_tables is used instead.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							exclude_tables
						</para>
					</entry>
					<entry>
						<para>
							Lists tables not to be included in the replication. Do NOT modify unless specifically instructed to do so by ManageIQ support.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							options
						</para>
					</entry>
					<entry>
						<para />
					</entry>
				</row>
				<row>
					<entry>
						<para>
							replication_trace
						</para>
					</entry>
					<entry>
						<para>
							Set to true to capture all replication tracing in the log.
						</para>
						<para>
							Default: false
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							schedule_worker
						</para>
					</entry>
					<entry>
						<para>
							Settings for Scheduler Server Role and any other work that runs on a schedule. Parameters specified here will override those set in the worker_base:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							db_diagnostics_interval
						</para>
					</entry>
					<entry>
						<para>
							How frequently to collect database diagnostics statistics
						</para>
						<para>
							Default: 30.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							job_proxy_dispatcher_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check for available SmartProxies for SmartState Analysis jobs.
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							job_proxy_dispatcher_stale_message_check_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check for the dispatch message in the queue Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							job_proxy_dispatcher_stale_message_timeout
						</para>
					</entry>
					<entry>
						<para>
							Kill a message if this value is reached.
						</para>
						<para>
							Default: 2.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							job_timeout_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check to see if a job has timed out.
						</para>
						<para>
							Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							license_check_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check for valid license.
						</para>
						<para>
							Default: 1.days
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 150.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 3
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							performance_collection_interval
						</para>
					</entry>
					<entry>
						<para>
							Controls how often the schedule worker will put performance collection request on the queue to be picked up by the collection worker.
						</para>
						<para>
							Default: 3.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							performance_collection_start_delay
						</para>
					</entry>
					<entry>
						<para>
							How long after CFME Server has started before starting capacity and utilization collection, if collection needs to be done.
						</para>
						<para>
							Default: 5.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							server_logs_stats_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to log the CFME Server statistics.
						</para>
						<para>
							Default: 5.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							server_stats_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to collect the CFME Server statistics.
						</para>
						<para>
							Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							session_timeout_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check to see if a UI (CFME Console) session has timed out.
						</para>
						<para>
							Default: 30.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							storage_file_collection_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to perform file inventory of storage locations.
						</para>
						<para>
							Default: 1.days
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							storage_file_collection_time_utc
						</para>
					</entry>
					<entry>
						<para>
							What time to perform file inventory of storage locations.
						</para>
						<para>
							Default: "06:00"
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vdi_refresh_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to refresh vdi inventory
						</para>
						<para>
							Default: 20.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vm_retired_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check for virtual machines that should be retired.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vm_scan_interval
						</para>
					</entry>
					<entry>
						<para>
							How often to check virtual machines to see if scan needs to be done.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							smis_refresh_worker
						</para>
					</entry>
					<entry>
						<para>
							Settings for Storage Inventory Server Role and any other work that runs on a schedule. Parameters specified here will override those set in the worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							connection_pool_size
						</para>
					</entry>
					<entry>
						<para>
							Maximum number of database connections allowed per process.
						</para>
						<para>
							Default: 5
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 1.gigabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 3
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							smis_update_period
						</para>
					</entry>
					<entry>
						<para>
							How frequently to update smis information.
						</para>
						<para>
							Default: 1.hours
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							status_update_period
						</para>
					</entry>
					<entry>
						<para>
							How frequently to update smis status.
						</para>
						<para>
							Default: 5.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							stats_update_period
						</para>
					</entry>
					<entry>
						<para>
							How frequently to update smis statistics.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vim_broker_worker
						</para>
					</entry>
					<entry>
						<para>
							Launched for any of these roles: Capacity &amp; Utilization Collector, SmartProxy, SmartState Analysis, Management System Operations, Management System Inventory. Also launched if the use_vim_broker setting is on. Provides connection pooling, caching of data to and from the VMware infrastructure. Parameters specified here will override those set in the workers:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							heartbeat_freq
						</para>
					</entry>
					<entry>
						<para>
							How often to heartbeat the worker
						</para>
						<para>
							Default: 15.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 1.gigabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 3
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 1.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							reconnect_retry_interval
						</para>
					</entry>
					<entry>
						<para>
							Period after which connection is retried.
						</para>
						<para>
							Default: 5.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vim_broker_status_interval
						</para>
					</entry>
					<entry>
						<para>
							Interval at which the status of the vim_broker is checked.
						</para>
						<para>
							Default: 15.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							vim_broker_update_interval
						</para>
					</entry>
					<entry>
						<para>
							Internal system setting which configures how much time to wait after receiving event updates before checking for more updates.
						</para>
						<para>
							Default: 0.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							wait_for_started_timeout
						</para>
					</entry>
					<entry>
						<para>
							Time between the worker's preload and startup time before considering the worker timed out.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ui_worker:
						</para>
					</entry>
					<entry>
						<para>
							Settings for User Interface Server Role. Parameters specified here will override those set in the worker_base:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							connection_pool_size
						</para>
					</entry>
					<entry>
						<para>
							Maximum number of database connections allowed per process.
						</para>
						<para>
							Default: 5
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 1.gigabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta: 1
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							web_service_worker:
						</para>
					</entry>
					<entry>
						<para>
							Settings for Web Services Server Role. Parameters specified here will override those set in the worker_base:default section.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							connection_pool_size
						</para>
					</entry>
					<entry>
						<para>
							Maximum number of database connections allowed per process.
						</para>
						<para>
							Default: 5
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 1.gigabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 60.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							queue_worker_base
						</para>
					</entry>
					<entry>
						<para>
							Base class of all queue workers that work off of the queue..
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							defaults
						</para>
					</entry>
					<entry>
						<para>
							If the following parameters are NOT explicitly defined for a queue worker, then these values will be used.
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							cpu_usage_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much cpu to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 100.percent
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							queue_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long a queue message can be worked on before it is considered timed out.
						</para>
						<para>
							Default: 10.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 400.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							restart_interval
						</para>
					</entry>
					<entry>
						<para>
							Queue workers restart interva.l
						</para>
						<para>
							Default: 2.hours
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll_method
						</para>
					</entry>
					<entry>
						<para>
							If set to normal, the worker checks for work the number of seconds set in the poll parameter. If set to escalate, the worker will increase the time between checks when there is no work to be done.
						</para>
						<para>
							Default: normal
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							generic_worker
						</para>
					</entry>
					<entry>
						<para>
							Performs work that is not classified as any specific type of work. Processes all normal priority or non-specific queue items. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 4
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							ems_refresh_worker
						</para>
					</entry>
					<entry>
						<para>
							Performs all ems (management system) refreshes to keep the vmdb in sync with the state of the components of the virtual infrastrucutre in the various management systems. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 10.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 2.gigabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 7
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							restart_interval
						</para>
					</entry>
					<entry>
						<para>
							Queue workers restart interval.
						</para>
						<para>
							Default: 2.hours
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							queue_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long a message can be worked on before it is considered timed out.
						</para>
						<para>
							Default: 120.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							event_handler
						</para>
					</entry>
					<entry>
						<para>
							Associated with Event Monitor Server Role. Handles all events caught by the event catcher worker. Parameters specified here will override those set in the workers:default section. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							cpu_usage_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much cpu to allow the worker to grow to before gracefully requesting it to exit and restart. The value of 0 means that this worker will never be killed due to CPU usage.
						</para>
						<para>
							Default: 0.percent
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 7
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							perf_collector_worker
						</para>
					</entry>
					<entry>
						<para>
							Connects to VC/ESX to collect the raw performance data. Same as the Capacity &amp; Utilization Data Collector Server Role. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 2
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll_method
						</para>
					</entry>
					<entry>
						<para>
							If set to normal, the worker checks for work the number of seconds set in the poll parameter. If set to escalate, the worker will increase the time between checks when there is no work to be done.
						</para>
						<para>
							Default: escalate
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 3
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							perf_processor_worker
						</para>
					</entry>
					<entry>
						<para>
							Processes the raw performance data into a reportable format. Same as the Capacity &amp; Utilization Data Processor Server Role. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 2
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll_method
						</para>
					</entry>
					<entry>
						<para>
							If set to normal, the worker checks for work the number of seconds set in the poll parameter. If set to escalate, the worker will increase the time between checks when there is no work to be done.
						</para>
						<para>
							Default: escalate
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 400.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 7
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							priority_worker
						</para>
					</entry>
					<entry>
						<para>
							Performs all high priority queue items including many tasks on behalf of the UI. UI requests are normally executed by a priority worker so they will not to block the UI. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 2
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 200.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 1
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							poll
						</para>
					</entry>
					<entry>
						<para>
							How often the workers checks for work. This value only is only used when the worker has no more work to do from the queue. It will wait for an amount of time determined by the poll value and poll method. Therefore, if there is constant work on the queue, the worker will not wait in between messages.
						</para>
						<para>
							Default: 1.seconds
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							reporting_worker
						</para>
					</entry>
					<entry>
						<para>
							Compiles reports. Settings for Reporting Server Role. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 2
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							nice_delta
						</para>
					</entry>
					<entry>
						<para>
							Tells the worker monitor what Unix "nice" value to assign the workers when starting. A lower number is less nice to other processes.
						</para>
						<para>
							Default: 7
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							smart_proxy_worker
						</para>
					</entry>
					<entry>
						<para>
							Performs the embedded scanning of virtual machines. Settings for SmartProxy Server Role. Parameters specified here will override those set in the queue_worker_base:default section
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							count
						</para>
					</entry>
					<entry>
						<para>
							Number of this type of worker.
						</para>
						<para>
							Default: 3
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							memory_threshold
						</para>
					</entry>
					<entry>
						<para>
							How much memory to allow the worker to grow to before gracefully requesting it to exit and restart.
						</para>
						<para>
							Default: 600.megabytes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							queue_timeout
						</para>
					</entry>
					<entry>
						<para>
							How long a queue message can be worked on before it is considered timed out.
						</para>
						<para>
							Default: 20.minutes
						</para>
					</entry>
				</row>
				<row>
					<entry>
						<para>
							restart_interval
						</para>
					</entry>
					<entry>
						<para>
							Queue workers restart interval.
						</para>
						<para>
							Default: 2.hours
						</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
</section>
